<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>

  <!--
          (1) Define root application context loader
                 - this creates Spring Application Context using the class defined by 'contextClass' param below
   -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!--
          (2) Let springframework know to use following class to create root application context
                - this creates Spring Application Context using the class defined by 'contextClass' param below
  -->
  <context-param>
    <param-name>contextClass</param-name>
    <param-value>
      org.springframework.web.context.support.AnnotationConfigWebApplicationContext
    </param-value>
  </context-param>

  <!--
         (3) Let springframework know to where to get the bean definitions
               - following packages or classes are scanned for spring bean definitions (eg: @Configuration annotation etc.)
 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>com.dan.spring.AppConfig</param-value>
  </context-param>

  <!-- Application context for following DispatcherServlet will be registered as a child of above root application context -->
  <servlet>
    <servlet-name>dispatcher</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- Configure DispatcherServlet to use AnnotationConfigWebApplicationContext
        instead of the default XmlWebApplicationContext -->
    <init-param>
      <param-name>contextClass</param-name>
      <param-value>
        org.springframework.web.context.support.AnnotationConfigWebApplicationContext
      </param-value>
    </init-param>
    <!-- Again, config locations must consist of one or more comma - or space-delimited
        and fully-qualified @Configuration classes -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>com.dan.spring.web.MvcConfig</param-value>
    </init-param>
  </servlet>

  <!-- map all requests for /app/* to the dispatcher servlet -->
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/app/*</url-pattern>
  </servlet-mapping>
</web-app>
